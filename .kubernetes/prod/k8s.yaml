#Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cct-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cct-api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: cct-api
    spec:
      containers:
        - name: cct-api
          image: gcr.io/PROJECT_ID/IMAGE_APP:TAG
          ports:
            - containerPort: 3000
          # resources:
          #   limits:
          #     cpu: 500m
          #     memory: 128Mi
          env:
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: api-cct-postgresql
                  key: postgres-password
      restartPolicy: Always
---
#Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cct-api
  name: cct-api
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 3000
  selector:
    app: cct-api
---
#Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cct-api-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-dev"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    # nginx.org/client-max-body-size: "100m"
spec:
  tls:
    - hosts:
        - api.cct.mobilidade.rio
      secretName: cct-api-tls
  rules:
    - host: api.cct.mobilidade.rio
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cct-api
                port:
                  number: 80

---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt
  namespace: cct
spec:
  acme:
    email: caiorsantos.smtr@gmail.com
    preferredChain: ""
    privateKeySecretRef:
      name: letsencrypt
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
      - http01:
          ingress:
            class: nginx
